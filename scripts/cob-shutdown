#!/usr/bin/env bash

if [[ $HOSTNAME != *"b"* ]]; then 
    echo "FATAL: CAN ONLY BE EXECUTED ON BASE PC, current host is $HOSTNAME"
    exit
fi

# get pcs in local network
IP=$(hostname -I | awk '{print $1}')
client_list=$(nmap --unprivileged $IP-98 --system-dns | grep report | awk '{print $6}' | sed 's/(//g;s/)//g')

##### uncomment the following lines if Windows runs as a Virtual Machine
#cob-stop-vm-win
#
#rm -rf /tmp/runningVMS
#Crono=0
#while [[ $Crono -le 60 ]]; do
#  su mimic -c "ssh -o ConnectTimeout=15 $robot_name-h1 'vboxmanage list runningvms'" > /tmp/runningVMS
#  if grep -q $robot_name-win "/tmp/runningVMS"; then
#    echo "VM still running"
#    Crono=$((Crono+1))
#  else
#    echo "VM not running"
#    Crono=100
#    break
#  fi
#  sleep 1
#done
##### 

#while /opt/ros/indigo/env.sh rostopic list > /dev/null; do
#	sleep 1
#done

for client in $client_list; do
    if [ $client == $IP ] ; then
        echo "skipping $client"
        continue
    fi
    echo "-------------------------------------------"
    echo "Executing <<"shutdown">> on $client"  
    echo "-------------------------------------------"
    echo ""
    ssh -o ConnectTimeout=15 $client "sudo shutdown now -P 0"
    ret=${PIPESTATUS[0]}
    if [ $ret != 0 ] ; then
      echo "command return an error (error code: $ret), aborting..."
    fi
done

for client in $client_list; do
    if [ $client == $IP ] ; then
        echo "skipping $client"
        continue
    fi
    echo "-------------------------------------------"
    echo "Executing <<waiting for>> on" $client  
    echo "-------------------------------------------"
    echo ""
    shutdown=false
    Crono=0
    while [[ !$shutdown &&  $Crono -le 60 ]]; do
      ping -qc 1 -w 3 $client > /dev/null
      if [ $? -ne 0 ] ; then
        shutdown=true
        echo $client down
        break
      else
        Crono=$((Crono+1))
        echo "waiting for" $client
      fi
      sleep 1
    done
    echo "done"
done

sudo poweroff -f
