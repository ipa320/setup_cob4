#Generated by Kickstart Configurator
#platform=x86

#System language
lang en_US
#Language modules to install
langsupport de_DE --default=en_US
#System keyboard
keyboard de
#System mouse
mouse
#System timezone
timezone Europe/Berlin
#Root password
rootpw --iscrypted sawVsPPn2.KXM
#Initial user
user robot-local --fullname "robot-local" --iscrypted --password $1$B.HZ0G5H$S5mK3hxXZYEoHCKmADvWx.
#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use CDROM installation media
cdrom
#System bootloader configuration
bootloader --location=mbr
#Clear the Master Boot Record
zerombr yes
#Partition clearing information
#clearpart --all --initlabel
#Disk partitioning information
#part / --fstype ext4 --size 20000 --grow
#part swap --recommended

#System authorization infomation
auth  --useshadow  --enablemd5
#Network information
network --bootproto=dhcp --device=eth0
#Firewall configuration
firewall --disabled
#Do not configure the X Window System
skipx

################ PACKAGES ################
# Additional packages to install.
%packages
can-utils
gitg
git-gui
gnome
htop
ipython
language-pack-de
language-pack-en
meld
openssh-client
openssh-server
pulseaudio
terminator
tmux
tree
vim
zsh

################!! PRE-INSTALLATION !!################
################ Request for hostname ################
%pre --erroronfail --interpreter /bin/bash
#switch to tty1
exec < /dev/tty6 > /dev/tty6 2>&1
chvt 6
echo "########################################"
echo "# Running Pre Configuration for master #"
echo "########################################"
echo -n "Enter the name of the machine (hostname): "
read hostn
hostname $hostn
echo "You have chosen $hostn. Press enter to continue or Ctrl Alt Del to restart"
read
#Go back to tty1
exec < /dev/tty1 > /dev/tty1
chvt 1
%end


################!! POST-INSTALLATION !!################
################ UPGRADE APT PACKAGES ################
%post --erroronfail --interpreter /bin/bash
apt-get upgrade -y --force-yes
%end

################ SETUP GRUB ################
%post --erroronfail --interpreter /bin/bash
if grep -q GRUB_RECORDFAIL_TIMEOUT= /etc/default/grub ; then
echo "found GRUB_RECORD_FAIL flag already, skipping update-grub call"
else
echo "GRUB_RECORDFAIL_TIMEOUT=10" >> /etc/default/grub
update-grub
fi
%end

################ UPGRADE KERNEL ################
#%post --erroronfail --interpreter /bin/bash
#apt-get install --install-recommends linux-generic-lts-xenial -y --force-yes
#%end

################ INSTALL GRAPHICAL INTERFACE ################
%post --erroronfail --interpreter /bin/bash
apt-get install ubuntu-gnome-desktop -y
%end

################ INSTALL HARDWARE ENABLED STACKS ################
#%post --erroronfail --interpreter /bin/bash
#apt-get install --install-recommends linux-generic-lts-xenial xserver-xorg-core-lts-xenial xserver-xorg-lts-xenial xserver-xorg-video-all-lts-xenial xserver-xorg-input-all-lts-xenial libwayland-egl1-mesa-lts-xenial -y
#dpkg-reconfigure xserver-xorg-lts-xenial
#%end

################ ADD USERS ################
%post --erroronfail --interpreter /bin/bash
echo "session	required	pam_mkhomedir.so " >> /etc/pam.d/common-session

# robot-local user
sed -i 's/HOME=/home/HOME=/iscsi/user/g' /etc/default/useradd
adduser --disabled-password --gecos "" robot-local --home /home/robot-local
echo "robot-local:sawVsPPn2.KXM"  | chpasswd -e
cp -rT /etc/skel /home/robot-local
chown robot-local:robot-local /home/robot-local

# robot user
adduser --disabled-password --gecos "" robot --home /u/robot
echo "robot:sawVsPPn2.KXM"  | chpasswd -e
usermod -m -d /u/robot robot
cp -rT /etc/skel /u/robot/
chown robot:robot /u/robot/
%end

################ SETUP ROOT USER ################
%post --erroronfail --interpreter /bin/bash
echo "Defaults rootpw" >> /etc/sudoers
passwd root --iscrypted sawVsPPn2.KXM
%end

################ GIVE ROBOT-LOCAL AND ROBOT USERS FULL RIGHTS ################
%post --erroronfail --interpreter /bin/bash
echo "robot-local ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
echo "robot ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
%end

################ KEYBOARD LAYOUT ################
%post --erroronfail --interpreter /bin/bash
L='de' && sed -i 's/XKBLAYOUT=\"\w*"/XKBLAYOUT=\"'$L'\"/g' /etc/default/keyboard
apt-get install console-data -y -f
dpkg-reconfigure keyboard-configuration
%end

################ NFS SETUP ################
%post --erroronfail --interpreter /bin/bash
apt-get install nfs-kernel-server nfs-common autofs -y
echo "/home /u none bind 0 0" >> /etc/fstab
echo "/u *(rw,fsid=0,sync,no_subtree_check)" >> /etc/exports
%end

################ CHRONY SETUP ################
%post --erroronfail --interpreter /bin/bash
apt-get install chrony -y -f
wget -O /etc/chrony/chrony.conf https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/chrony_server
%end

################ CONFIGURE SSH ################
%post --erroronfail --interpreter /bin/bash
echo "X11Forwarding yes" >> /etc/ssh/sshd_config
echo "X11UseLocalhost no" >> /etc/ssh/sshd_config
echo "PermitRootLogin yes">> /etc/ssh/sshd_config
echo "ClientAliveInterval 60" >> /etc/ssh/sshd_config
sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
/etc/init.d/ssh restart
%end

################ SETUP UDEV RULES ################
%post --erroronfail --interpreter /bin/bash
wget -O /etc/udev/rules.d/98-led.rules https://raw.githubusercontent.com/ipa320/setup_cob4/master/udev_rules/98-led.rules
wget -O /etc/init.d/udev_cob.sh https://raw.githubusercontent.com/ipa320/setup_cob4/master/udev_rules/udev_cob.sh
chmod +x /etc/init.d/udev_cob.sh
update-rc.d udev_cob.sh defaults
%end

################ INSTALLING ROS ################
%post --erroronfail --interpreter /bin/bash
sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
apt-get update
apt-get install ros-kinetic-ros-base -y
apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential -y
#apt-get install python-catkin-tools -y
#apt-get install python-pip -y
apt-get install ros-kinetic-care-o-bot-robot
%end

################ INSTALLING GIT-LFS ################
%post --erroronfail --interpreter /bin/bash
curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
apt-get update
apt-get install git-lfs
%end

################ SETUP DEFAULT BASH ENVIROMENT ################
%post --erroronfail --interpreter /bin/bash
wget -O /etc/cob.bash.bashrc https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/cob.bash.bashrc.b
%end

################ INSTALL SHUTDOWN ################
%post --erroronfail --interpreter /bin/bash
wget -O /usr/sbin/cob-shutdown https://raw.githubusercontent.com/ipa320/setup_cob4/master/scripts/cob-shutdown
chmod +x /usr/sbin/cob-shutdown
sed -i 's/etc\/acpi\/powerbtn.sh/usr\/sbin\/cob-shutdown/g' /etc/acpi/events/powerbtn
echo "%users ALL=NOPASSWD:/usr/sbin/cob-shutdown" >> /etc/sudoers
%end

################ NETWORK SETUP ################
%post --erroronfail --interpreter /bin/bash

apt-get -y remove biosdevname -y --force-yes
update-initramfs -u
update-grub

(
  wget -O /etc/network/interfaces https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/networkInterfacesB1
) 2>&1 | /usr/bin/tee /root/post-install.log
chvt 1
touch /etc/network/interfaces.orig
cp /etc/network/interfaces /etc/network/interfaces.orig
echo "mv /etc/network/interfaces.orig /etc/network/interfaces && ifup -a && sed -i '/fixnet.sh/d' /etc/rc.local && rm -f /fixnet.sh" > /fixnet.sh
sed -i '/exit 0/ibash /fixnet.sh' /etc/rc.local
wget -O /etc/network/interfaces https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/networkInterfacesB1
/etc/init.d/networking restart
%end

################ SETUP /etc/hosts file ################
%post --erroronfail --interpreter /bin/bash
HOSTNAME=$(cat /etc/hostname)

sed -i "s/$HOSTNAME.ipa-apartment.org\t//g" /etc/hosts

ROBOTNAME=$(echo ${HOSTNAME%-*})
ROBOT_NUM=$(echo ${ROBOTNAME##*-})

PC_LS=(
"10.4.${ROBOT_NUM}.41	${ROBOTNAME}-h1"
"10.4.${ROBOT_NUM}.31	${ROBOTNAME}-s1"
"10.4.${ROBOT_NUM}.23	${ROBOTNAME}-t3"
"10.4.${ROBOT_NUM}.22	${ROBOTNAME}-t2"
"10.4.${ROBOT_NUM}.21	${ROBOTNAME}-t1"
"10.4.${ROBOT_NUM}.11	${ROBOTNAME}-b1"
)

for ((i = 0; i < ${#PC_LS[@]}; i++))
do
  if ! [[ ${PC_LS[$i]} == *${HOSTNAME}* ]]; then
    sed -i "4i ${PC_LS[$i]}" /etc/hosts
  fi
done

sed -i $'8 a \n' /etc/hosts
%end

################ INSTALL CANDUMP TOOLS ################
#%post --erroronfail --interpreter /bin/bash
#initctl stop candump2mongodb
#rm /etc/init/candump2mongodb.conf
#wget -O /usr/local/bin/socket_buffer.py https://raw.githubusercontent.com/ipa320/setup_cob4/master/scripts/socket_buffer.py
#chmod +x /usr/local/bin/socket_buffer.py
##wget -O /etc/init/candump_any.conf https://raw.githubusercontent.com/ipa320/setup_cob4/master/scripts/candump_any.conf
##initctl start candump_any
#%end

################ INSTALL NOMACHINE ################
%post --erroronfail --interpreter /bin/bash
NOMACHINE_VERSION=6.0.66_2
wget -O /root/nomachine_${NOMACHINE_VERSION}_amd64.deb http://download.nomachine.com/download/6.0/Linux/nomachine_${NOMACHINE_VERSION}_amd64.deb
dpkg -i /root/nomachine_${NOMACHINE_VERSION}_amd64.deb
%end

################ INSTALL NETDATA TOOLS ################
%post --erroronfail --interpreter /bin/bash
apt-get install zlib1g-dev uuid-dev libmnl-dev gcc make git autoconf autoconf-archive autogen automake pkg-config curl -y
git clone https://github.com/firehol/netdata.git --depth=1 /root/netdata
cd /root/netdata
yes | ./netdata-installer.sh
%end

################ INSTALL COB_COMMAND ################
%post --erroronfail --interpreter /bin/bash
wget -O /usr/sbin/cob-command https://raw.githubusercontent.com/ipa320/setup_cob4/master/scripts/cob-command
chmod +x /usr/sbin/cob-command
sh -c 'echo "%users ALL=NOPASSWD:/usr/sbin/cob-command"' | sed -i -e "\|%users ALL=NOPASSWD:/usr/sbin/cob-command|h; \${x;s|%users ALL=NOPASSWD:/usr/sbin/cob-command||;{g;t};a\\" -e "%users ALL=NOPASSWD:/usr/sbin/cob-command" -e "}" /etc/sudoers
%end

################ REMOVE MODEMMANAGER ################
# causes issues with /dev/ACM devices
%post --erroronfail --interpreter /bin/bash
apt-get purge modemmanager -y
%end

################ DISABLE POPUP FOR LTS UPDATES ################
%post --erroronfail --interpreter /bin/bash
sed -i 's/Prompt\=lts/Prompt\=never/g' /etc/update-manager/release-upgrades
%end

################ DISABLE FAILSAFE BOOT ################
#%post --erroronfail --interpreter /bin/bash
#sed -i 's/start on \(filesystem and static-network-up\) or failsafe-boot/start on filesystem and static-network-up/g' /etc/init/rc-sysinit.conf
#%end

################ INSTALL APT-CACHER ################
%post --erroronfail --interpreter /bin/bash
apt-get install apt-cacher-ng -y

echo 'Acquire::http { Proxy "http://server_ip:3142"; };' >> /etc/apt/apt.conf.d/01proxy
HOSTNAME=$(cat /etc/hostname)
SERVERNAME=$(echo ${HOSTNAME%-*}-b1)
sed -i "s/server_ip/${SERVERNAME}/g" /etc/apt/apt.conf.d/01proxy
sed -i 's/\# PassThroughPattern: .\*/PassThroughPattern: .\*/g' /etc/apt-cacher-ng/acng.conf
%end
