#Generated by Kickstart Configurator
#platform=x86

#System language
lang en_US
#System keyboard
keyboard de
#System mouse
mouse
#System timezone
timezone Europe/Berlin
#Root password
rootpw --iscrypted $1$0DxJd73I$GOjLQEJ3LaHKCXsLfyPTy1
#Initial user
user robot-local --fullname "robot-local" --iscrypted --password $1$5CMWYFBH$lgSQhpARVj3RZtQjvTW7C0

#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use CDROM installation media
cdrom
#System bootloader configuration
bootloader --location=mbr 
#Clear the Master Boot Record
zerombr yes
#Partition clearing information
clearpart --all --initlabel 
#Disk partitioning information
################PARTITION#####################################
clearpart --all --initlabel
part /boot --fstype ext4 --size 200 --asprimary
part swap --size 1024
part pv.01 --size 1 --grow
volgroup rootvg pv.01
logvol / --fstype ext4 --vgname=rootvg --size=1 --grow --name=rootvol
# needed to answer the 'do you want to write changes to disk"
preseed partman-lvm/confirm_nooverwrite boolean true

# needed to answer the question about not having a separate /boot
preseed partman-auto-lvm/no_boot boolean true
#####################################################
#System authorization infomation
auth  --useshadow  --enablemd5 
#Firewall configuration
firewall --disabled
#Do not configure the X Window System
skipx
#######################PACKAGES################################
# Additional packages to install.
%packages
vim
gnome
tree
gitg
git-gui
meld
openjdk-6-jdk
zsh
terminator
language-pack-de
language-pack-en
ipython
ubuntu-desktop
######################PRE-INSTALLATION#######################################
%pre --interpreter=/bin/sh
#!/bin/bash
######################Request for hostname#########################################
exec < /dev/tty6 > /dev/tty6 2>&1
chvt 6
echo "################################"
echo "# Running Pre Configuration    #"
echo "################################"
echo -n "Enter the name of the machine (hostname): "
read hostn
hostname $hostn
echo "You have chosen $hostn. Press enter to continue or Ctrl Alt Del to restart"
read
###Go back to tty1##
exec < /dev/tty1 > /dev/tty1
chvt 1
%end
################################################################################
# Define variables for Gnome settings file. 
settingsDir=/usr/share/glib-2.0/schemas
settingsFile=gnome-tweaks.gschema.override
settingsFileWithDir=$settingsDir/$settingsFile

# Create a file for Gnome settings, which will later be compiled in this script.
touch $settingsFileWithDir

# Enable VNC
echo "[org.gnome.Vino]" >> $settingsFileWithDir
echo "authentication-methods=['vnc']" >> $settingsFileWithDir
echo "enabled=true" >> $settingsFileWithDir
echo "require-encryption=false" >> $settingsFileWithDir
echo "prompt-enabled=false" >> $settingsFileWithDir
echo "vnc-password='bXVjaGhhY2tlcndvdw=='" >> $settingsFileWithDir

# Turn off screen lock
echo "" >> $settingsFileWithDir
echo "[org.gnome.desktop.screensaver]" >> $settingsFileWithDir
echo "lock-enabled=false" >> $settingsFileWithDir

# Turn off screen timeout
echo "" >> $settingsFileWithDir
echo "[org.gnome.desktop.session]" >> $settingsFileWithDir
echo "idle-delay=0" >> $settingsFileWithDir

# Change default favorite applications
echo "[org.gnome.shell]" >> $settingsFileWithDir
echo "favorite-apps=['google-chrome.desktop','gnome-terminal.desktop','nautilus.desktop']" >> $settingsFileWithDir

# Compile Gnome settings
glib-compile-schemas $settingsDir

# Turn on Wake-on-LAN
ethtool -s eth0 wol g

# Add your custom post installation script here. It's not necessary, but you can add something depending on your needs. Here's my script:
######################POST-INSTALLATION#######################################

########## SETUP GRUB ##################
%post --interpreter=/bin/bash
#!/bin/bash
echo -e "\n${green}INFO:Installing basic tools${NC}\n"
if grep -q GRUB_RECORDFAIL_TIMEOUT= /etc/default/grub ; then
echo "found GRUB_RECORD_FAIL flag already, skipping update-grub call"
else
echo "GRUB_RECORDFAIL_TIMEOUT=10" >> /etc/default/grub
update-grub
fi
%end

##### UPGRADE KERNEL #################################################
%post --interpreter=/bin/bash
apt-get install --install-recommends linux-generic-lts-xenial -y --force-yes
%end

################## INSTALL GRAPHICAL INTERFACE ############
%post --interpreter=/bin/bash
apt-get install lightdm -y -f
dpkg-reconfigure lightdm
%end

####################INSTALLING ROS#######################################     
%post --interpreter=/bin/bash
sh -c 'echo "deb http://packages.ros.org/ros/ubuntu trusty main" >> /etc/apt/sources.list.d/ros-latest.list'
wget http://packages.ros.org/ros.key -O - | apt-key add - 
apt-get install python-ros-* -y -f
apt-get install ros-indigo-rosbash -y -f
apt-get install ros-indigo-ros
#apt-get install ros-indigo-care-o-bot-robot -y -f # TODO include again after Debugging
%end

####################??????#######################################     
%post --interpreter=/bin/bash
dpkg --configure -a
echo "sources list:"
cat /etc/apt/sources.list
apt-get update
apt-get upgrade -y
apt-get clean
apt-get update
aptitude install openssh-client=1:5.9p1-5ubuntu1.10
apt-get install openssh-server -y
apt-get install aptitude -y
apt-get update
apt-get clean
apt-get update
apt-get upgrade -y
apt-get -f install 
%end

###############################SETUP UDEV RULES############################################### 
%post --interpreter=/bin/bash
echo -e "\n${green}INFO: Setup udev rules${NC}\n"
wget -O /etc/init.d/udev-cob.sh https://raw.githubusercontent.com/ipa-nhg-dd/setup_cob4/master/udev_rules/udev_cob.sh
update-rc.d udev_cob.sh defaults
%end

###############################SETUP BASH ENVIROMENT##########################################
%post --interpreter=/bin/bash
echo -e "\n${green}INFO: Setup bash environment${NC}\n"

wget -O /etc/cob.bash.bashrc https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/cob.bash.bashrc.b
%end

############################### INSTALL SHUTDOWN ##########################################
%post --interpreter=/bin/bash
wget -O /usr/sbin/cob-shutdown https://raw.githubusercontent.com/ipa320/setup_cob4/master/scripts/cob-shutdown
sed -i 's/etc\/acpi\/powerbtn.sh/usr\/sbin\/cob-shutdown/g' /etc/acpi/events/powerbtn
echo "%users ALL=NOPASSWD:/usr/sbin/cob-shutdown" >> /etc/sudoers
%end

###########################SETUP USERS#######################
%post --interpreter /bin/bash
################ FOR ROOT USER ##########
rootpw --iscrypted $1$vizH0RQG$TKZAKKZ3ACNxOPM9GJlTI0

echo "::Adding users and groups ::"
############FOR ROBOT-LOCAL USER##############################################################
useradd robot-local -m -d /home/robot-local -p Va2ca5JIMT/1g

##################ROBOT USER##################################
useradd robot -m -d /u/robot -p Va2ca5JIMT/1g
%end

########### SETUP LOCAL ROOT USER #################
%post
echo "\n${green}INFO:Setup local ROOT user${NC}\n"
echo "Defaults rootpw" >> /etc/sudoers
rootpw robot
#passwd root --iscrypted $1$tEHboVqc$8dkJ2OvCfg8P3z/ru2puI0
echo "robot-local ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
echo "robot ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
apt-get -y -q update
%end

############## NFS SETUP #############
%post --interpreter /bin/bash
echo -e "\n${green}INFO:  Install NFS${NC}\n"
sleep 5
apt-get install nfs-kernel-server autofs -y -f
echo "/home /u none bind 0 0" >> /etc/fstab
echo "/u *(rw,fsid=0,sync,no_subtree_check)" >> /etc/exports
{ rm /etc/default/nfs-common && awk '/^NEED_STADT/ {sub(/\=/,"=yes")}1' > /etc/default/nfs-common; } < /etc/default/nfs-common 
%end

############## SETUP SSH #############
%post --interpreter /bin/bash
echo "X11Forwarding yes" >> /etc/ssh/sshd_config
echo "X11UseLocalhost no" >> /etc/ssh/sshd_config
echo "PermitRootLogin yes">> /etc/ssh/sshd_config
echo "ClientAliveInterval 60" >> /etc/ssh/sshd_config
sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
/etc/init.d/ssh restart
%end

############## NTP SETUP #############
%post --interpreter /bin/bash
wget -O /etc/ntp.conf https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/ntp_server
sed -i 's/server_ip/$HOST/g' /etc/ssh/sshd_config
%end

############################NETDATA TOOLS##############################################
%post 
echo -e "\n${green}INFO: NETDATA TOOLS${NC}\n"
apt-get install zlib1g-dev uuid-dev libmnl-dev gcc make git autoconf autoconf-archive autogen automake pkg-config curl -y
git clone https://github.com/firehol/netdata.git --depth=1 /root/netdata
cd /root/netdata
yes | ./netdata-installer.sh
%end

############################NOMACHINE##################################################
%post
echo -e "\n${green}INFO: NOMACHINE${NC}\n"
apt-get install pulseaudio -y
wget -O /root/nomachine_5.1.9_6_amd64.deb http://download.nomachine.com/download/5.1/Linux/nomachine_5.1.9_6_amd64.deb
dpkg -i /root/nomachine_5.1.9_6_amd64.deb
%end

############################Candump tools##############################################
%post
echo -e "\n${green}INFO: CANDUMP TOOLS${NC}\n"
initctl stop candump2mongodb
rm /etc/init/candump2mongodb.conf
wget -O /usr/local/bin/socket_buffer.py https://raw.githubusercontent.com/ipa320/setup_cob4/master/scripts/socket_buffer.py
chmod +x /usr/local/bin/socket_buffer.py
wget -O /etc/init/candump_any.conf https://raw.githubusercontent.com/ipa320/setup_cob4/master/scripts/candump_any.conf
initctl start candump_any
%end

################# NETWORK SETUP################
%post --interpreter=/bin/bash --logfile /root/ks-post.log

echo
echo "################################"
echo "# Running Post Configuration   #"
echo "################################"
(
  wget -O /etc/network/interfaces https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/networkInterfacesB1
) 2>&1 | /usr/bin/tee /root/post-install.log
chvt 1
touch /etc/network/interfaces.orig
cp /etc/network/interfaces /etc/network/interfaces.orig
echo "mv /etc/network/interfaces.orig /etc/network/interfaces && ifup -a && sed -i '/fixnet.sh/d' /etc/rc.local && rm -f /fixnet.sh" > /fixnet.sh
sed -i '/exit 0/ibash /fixnet.sh' /etc/rc.local
wget -O /etc/network/interfaces https://raw.githubusercontent.com/ipa320/setup_cob4/master/cob-pcs/networkInterfacesB1
/etc/init.d/networking restart
%end
